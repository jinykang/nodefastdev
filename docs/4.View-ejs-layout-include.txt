

1)EJS View Engine 기본 문법
**글수정/글목록 라우팅 메소드와 뷰파일 기반  EJS문법 실습 진행

router.get('/modify', async(req, res, next)=> {

  var articleIdx = req.query.aid;
  console.log("게시글 고유번호-쿼리 스트링방식: ",articleIdx);


  var article={
    title:"제목입니다.",
    contents:"내용입니다.",
    email:"test@test.co.kr",
    writer:"강창훈",
    display:"N"
  };

  res.render('article/modify',{article});
});


router.get('/list', async(req, res, next)=>{

  var articles =[
    { 
        article_id:1,
        title:"제목1입니다.",
        contents:"내용1입니다.",
        email:"test@test.co.kr",
        writer:"강창훈",
        display:"Y"
    },
    { 
        article_id:2,
        title:"제목2입니다.",
        contents:"내용2입니다.",
        email:"test2@test.co.kr",
        writer:"강창훈2",
        display:"N"
    }
];


  res.render('article/list',{articles});
});



1.1)View파일내에 전달된 데이터출력하기 
<%= title%>

1.2)if구문 예시

<% if(article.display == "Y"){%> 
    selected 
<% }%>


<% if(userName == "강창훈"){%>
        <h3>환영합니다. 운영자님~~</h3>
<% } else{ %>
        <h3>환영합니다. 사용자님~</h3>
<% }%>


1.3)for 반복구문

<% for(var i =0;i<articles.length;i++){ %>
    <tr>
        <td><a href="#"><%= articles[i].article_id %></a></td>
        <td><a href="#"><%= articles[i].writer %></a></td>
        <td><%= articles[i].email %></td>
        <td><a href="/articles/modify?aid=<%= articles[i].article_id %>"><%= articles[i].title %></a></td>
        <td>1</td>
        <td>
        <% if(articles[i].display == "Y"){%>
        게시
        <% } else{ %>
        게시안함
        <% }%></td>
        <td>2022-12-06</td>
    </tr>
<% } %>


<% for(var i =0;i<children.length;i++){ %>
     <%=i+1%>번째 이름은 <%=children[i].childName%> 나이는<%=children[i].age%> 입니다.<br>
<% } %>




1.4)Include 문법 
<% include ./header.ejs %>  //ejs ver 2.x버전문법
<%- include(‘./header.ejs’,{data:"aaa"}) %>  //ejs ver 3.x버전 문법


1.5)Layout/Master 페이지 구성하기 

npm i express-ejs-layouts

-views\layoutPage.ejs 레이아웃 뷰파일을 만든다.
ㄴ레이아웃뷰파일안에 전체 레이아웃 html템플릿 소스를 반영한다. 
ㄴ레이아웃 페이지내에 컨텐츠 페이지와 컨텐츠 페이지내 자바스크립트 파일 표시영역을 정의한다.

<%- body%>
<%- script %>


-app.js내 layout설정을 추가한다.
var expressLayouts = require('express-ejs-layouts');

...

app.set('view engine', 'ejs');
...

app.set('layout', 'layoutPage'); //기본 레이아웃 페이지 뷰 설정하기 
app.set("layout extractScripts", true); //컨텐츠 페이지의 스크립트소스를 추출할지여부 정의 
app.use(expressLayouts); 


-특정뷰에 특정 레이아웃 페이지 적용 시키기 
router.get('/login', async(req, res, next)=>{
  res.render('member/login',{layout:'layoutLogin'});
});

-layoutLogin.ejs









